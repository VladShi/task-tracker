services:

  postgres:
    image: postgres:17.4
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    restart: unless-stopped

  zookeeper:
    image: bitnami/zookeeper:3.9.3
    ports:
      - "2181:2181"
    environment:
      ZOO_ENABLE_AUTH: "no"
      ALLOW_ANONYMOUS_LOGIN: "yes"
    restart: unless-stopped

  kafka:
    image: bitnami/kafka:3.9.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper
    restart: unless-stopped

#  task-tracker-backend:
#    build: ./task-tracker-backend
#    ports:
#      - "8080:8080"
#    environment:
#      - POSTGRES_USER=${POSTGRES_USER}
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
#      - JWT_SECRET=${JWT_SECRET}
#      - JWT_ISSUER_URI=${JWT_ISSUER_URI}
#      - JWT_EXPIRATION_SECONDS=${JWT_EXPIRATION_SECONDS}
#    depends_on:
#      - postgres
#    restart: unless-stopped
#
#  task-tracker-scheduler:
#    build: ./task-tracker-scheduler
#    ports:
#      - "8081:8081"
#    restart: unless-stopped
#
#  task-tracker-email-sender:
#    build: ./task-tracker-email-sender
#    ports:
#      - "8082:8082"
#    restart: unless-stopped

volumes:
  postgres_data_prod: